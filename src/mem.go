package main

import (
	"io"
	"log"
	"os"
)

var fontset = [...]byte{
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80, // F
}

var sys_memory []byte
var video_memory []bool = make([]bool, 2048)
var keypad []bool = make([]bool, 16)
var keywait int = -1

func mem_init() {
	sys_memory = make([]byte, 4096)
	for i := 0; i < len(fontset); i++ {
		sys_memory[i+80] = fontset[i]
	}
}

func load_file(path string) {
	f, err := os.Open(path)
	if err != nil {
		log.Fatalf("unable to open file: %v", err)
	}
	data, err := io.ReadAll(f)
	if err != nil {
		log.Fatalf("unable to read file: %v", err)
	}

	for i := 0; i < len(data); i++ {
		sys_memory[i+512] = data[i]
	}
}

func get_coord_location(x int, y int) int {
	loc := 0
	for i := 0; i < y; i++ {
		loc += 64
	}
	loc += x
	return loc
}
